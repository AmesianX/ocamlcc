.TH OCAMLCC 1

.SH NAME
ocamlcc \- OCaml bytecode to C code compiler

.SH SYNOPSIS
\fBocamlcc \fR[ \fIOPTIONS\fR ] [ \fIsrc.byte\fR ]

.SH DESCRIPTION

The \fBocamlcc\fR(1) command compiles an OCaml bytecode executable
into C code, and sends the result to a C compiler.

.SH OPTIONS

The following command line options are recognized by \fBocamlcc(1)\fR.

.TP
\fB-arch \fB[ x86 | x86_64 | none ]\fR
Specify the target architecture. Default is \fInone\fR, in which case
portable C code is generated.

.TP
\fB-c\fR
Stop after the generation of C code.

.TP
\fB-cc\fR
Specify which C compiler to use.

.TP
\fB-ccopt\fR
Extra argument for the C compiler (default is -O3 -Wall).

.TP
\fB-include\fR
Print include directory and exit.

.TP
\fB-k\fR
Keep intermediate bytecode and C files.

.TP
\fB-no-main\fR
Do not include the main function.

.TP
\fB-o \fIoutfile\fR
Specify the output file (default is a.out, or the bytecode source file
with a .c extension).

.TP
\fB-signal \fB[ E | R ]\fR
Generate code for signal handling to advantage efficiency (\fBE\fR) or
reactiveness (\fBR\fR). Default is \fBE\fR.

.TP
\fB-stat\fR
Print statistics.

.TP
\fB-trace\ \fR
Generate additional C code to trace execution.

.TP
\fB-verbose\fR
Verbose mode.

.TP
\fB-v\fR
Print version, include directory and OCaml runtime version, then exit.

.TP
\fB-version\fR
Print version and exit.

.SH SEE ALSO
.BR \fBocamlclean\fR(1),\ \fBocamlc\fR(1),\ \fBocamlrun\fR(1),\ \fBocamlopt\fR(1)
